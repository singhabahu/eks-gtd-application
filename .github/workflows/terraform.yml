name: 'Terraform'

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: read

env:
  CONTEXT: dev
  AWS_REGION: ap-southeast-2

jobs:
  validate-terraform:
    runs-on: ubuntu-latest
    environment: development

    # Use the Bash shell
    defaults:
      run:
        shell: bash

    steps:
    # Install the specific version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.7

    # Install the specific version of Terragrunt CLI
    - name: Setup Terragrunt
      uses: autero1/action-terragrunt@v1.1.0
      with:
        terragrunt_version: 0.38.6

    # Set AWS credentials for the CLI
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Initialize a new or existing Terraform working directory - state-backend
    - name: State-backend Terragrunt Init 
      working-directory: '${{env.CONTEXT}}/${{env.AWS_REGION}}/state-backend'
      run: terragrunt init

    # Checks that all Terraform configuration files adhere to a canonical format - state-backend
    - name: State-backend Terragrunt Format
      working-directory: '${{env.CONTEXT}}/${{env.AWS_REGION}}/state-backend'
      run: terragrunt fmt -check

    # Generates an execution plan for Terraform - state-backend
    - name: State-backend Terragrunt Plan
      working-directory: '${{env.CONTEXT}}/${{env.AWS_REGION}}/state-backend'
      run: terragrunt plan -input=false
